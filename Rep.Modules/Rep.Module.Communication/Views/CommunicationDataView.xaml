<UserControl x:Class="Rep.Module.Communication.Views.CommunicationDataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:convert="clr-namespace:Rep.Controls.Converts;assembly=Rep.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:loading="clr-namespace:Rep.Controls.View;assembly=Rep.Controls"
             d:DesignHeight="450" d:DesignWidth="800" Loaded="windows_Loaded">
    <UserControl.Resources>

        <ResourceDictionary>

            <!--是否添加资源不影响样式，为了方便调试样式-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />-->
                <!--控件样式-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#349fda"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="#333333"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#0288d1"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="#015f92"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="#FFFFFF"/>
            <!--ACCENT-->
            <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#689f38"/>
            <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="#FFFFFF"/>
            <Style x:Key="CustomCalendarDayButton" TargetType="CalendarDayButton" BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#B2F39B" />
                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="Black" />
            </Style>
            <Style x:Key="CustomCalendarButton" TargetType="CalendarButton" BasedOn="{StaticResource MaterialDesignCalendarButton}">
                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#B2F39B" />
                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="Black" />
            </Style>
            <Style x:Key="CustomCalendar" TargetType="{x:Type Calendar}" BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="#A2E9FF" />
                <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="Black" />
                <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
                <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
            </Style>
            <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />
            </Style>
            <convert:NumToDataStateEnumConvert x:Key="numtoDataState"/>
            <convert:NumToMothedTypeEnumConvert x:Key="numtoMothedType"/>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding ElementName=top, Path=Height}"/>
                <RowDefinition Height="{Binding ElementName=okng, Path=Height}"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid>
                <StackPanel x:Name="top" Orientation="Horizontal" Margin="10" VerticalAlignment="Top">
                    <DatePicker Margin="10" Width="100" materialDesign:HintAssist.Hint="日期" SelectedDate="{Binding CommunicationDataProperty.Date, Mode=TwoWay}" IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked, Converter={StaticResource InvertBooleanConverter}}"/>
                    <ComboBox Margin="10" materialDesign:HintAssist.Hint="班次" materialDesign:HintAssist.FontFamily="Verdana" MinWidth="100" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding CommunicationDataProperty.ClassesList}" SelectedItem="{Binding CommunicationDataProperty.Classes}" IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked, Converter={StaticResource InvertBooleanConverter}}"/>
                    <ComboBox Margin="10" materialDesign:HintAssist.Hint="结果" materialDesign:HintAssist.FontFamily="Verdana" MinWidth="100" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding CommunicationDataProperty.ResultList}" SelectedItem="{Binding CommunicationDataProperty.Result}"/>
                    <ComboBox Margin="10" materialDesign:HintAssist.Hint="方法类型" materialDesign:HintAssist.FontFamily="Verdana" MinWidth="100" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding CommunicationDataProperty.MothedTypeList}" SelectedIndex="{Binding CommunicationDataProperty.SelectedMothedType}"/>
                    <DatePicker Margin="10" IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Width="100" materialDesign:HintAssist.Hint="开始日期" SelectedDate="{Binding CommunicationDataProperty.StartDate}"/>
                    <materialDesign:TimePicker IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Margin="5" Width="100" Is24Hours="True" SelectedTime="{Binding CommunicationDataProperty.StartTime}"
                                           Style="{StaticResource MaterialDesignFloatingHintTimePicker}" materialDesign:HintAssist.Hint="开始时间" />
                    <DatePicker IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Margin="10" Width="100" materialDesign:HintAssist.Hint="结束日期" SelectedDate="{Binding CommunicationDataProperty.StartTime}"/>
                    <materialDesign:TimePicker IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Margin="5" Width="100" Is24Hours="True" SelectedTime="{Binding CommunicationDataProperty.EndTime}"
                                           Style="{StaticResource MaterialDesignFloatingHintTimePicker}" materialDesign:HintAssist.Hint="结束时间" />
                    <CheckBox x:Name="TimeSelect" Margin="10" Content="按时间段查询" IsChecked="{Binding CommunicationDataProperty.IsTimeSelect}" />

                    <Button Margin="10" Style="{StaticResource MaterialDesignRaisedAccentButton}" MinWidth="100" Content="查询" Command="{Binding SelectCommand}"/>
                    <Button Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ButtonProgressAssist.Value="-1" MinWidth="100" materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding CommunicationDataProperty.ExportAnimation}"
                                Content="导出"/>
                    <Button Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ButtonProgressAssist.Value="-1" MinWidth="100" materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding CommunicationDataProperty.ManualAnimation}" Command="{Binding ManualUpLoadCommand}"
                                Content="手动上传"
                                Margin="10"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel x:Name="okng" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Button Margin="10" MinWidth="150" Style="{StaticResource MaterialDesignRaisedAccentButton}" materialDesign:RippleAssist.IsDisabled="True" Content="{Binding CommunicationDataProperty.Count}" />
                    <Button Margin="10" Background="Green" MinWidth="150" Style="{StaticResource MaterialDesignRaisedAccentButton}" materialDesign:RippleAssist.IsDisabled="True" Content="{Binding CommunicationDataProperty.OKCount}" />
                    <Button Margin="10" Background="Red" MinWidth="150" Style="{StaticResource MaterialDesignRaisedAccentButton}" materialDesign:RippleAssist.IsDisabled="True" Content="{Binding CommunicationDataProperty.NGCount}" />
                </StackPanel>
            </Grid>
            <Grid Grid.Row="2">
                <DataGrid Background="Azure"  BorderThickness="2" Margin="10" CanUserAddRows="False" AutoGenerateColumns="False" HeadersVisibility="All" ItemsSource="{Binding CommunicationDataProperty.CommunicationData}" RowHeight="35">
                    <DataGrid.Resources>
                        <Style TargetType="ToolTip">
                            <Setter Property="BorderBrush" Value="#FF8FEC43"/>
                            <Setter Property="Background" Value="Azure"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToolTip">
                                        <Border Width="Auto" Height="Auto" Background="Azure" BorderBrush="#FF8FEC43" BorderThickness="2" CornerRadius="5">
                                            <TextBox Text="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                                <Border x:Name="border">
                                    <CheckBox IsChecked="{Binding CommunicationDataProperty.IsAllSelected}"/>
                                </Border>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding ProductID}" Header="产品ID" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding RecordTime}" Header="记录时间" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding MothedType, Converter={StaticResource numtoMothedType}}" Header="方法类型" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding State, Converter={StaticResource numtoDataState}}" Header="消息状态" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding ClientObj}" Header="客户端信息"  ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding ClientData}" Header="客户端源数据" MaxWidth="400" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding MESResult}" Header="MES反馈数据" MaxWidth="400" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content.Text}"/>
                        </Style>
                    </DataGrid.CellStyle>
                </DataGrid>
            </Grid>
        </Grid>
        <Border Visibility="{Binding CommunicationDataProperty.Loading, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Stretch" Background="Gray" Opacity="0.3" IsEnabled="False" VerticalAlignment="Stretch">
            <loading:LoadingView Width="200" Height="200"/>
        </Border>
    </Grid>



</UserControl>
