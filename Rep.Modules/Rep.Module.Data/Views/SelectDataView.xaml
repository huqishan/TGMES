<UserControl x:Class="Rep.Module.Data.Views.SelectDataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Rep.Module.Data.Views"
             mc:Ignorable="d" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <!--是否添加资源不影响样式，为了方便查看样式-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />-->
                <!--控件样式-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#349fda"/>
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="#333333"/>
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#0288d1"/>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="#015f92"/>
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="#FFFFFF"/>
            <!--ACCENT-->
            <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#689f38"/>
            <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="#FFFFFF"/>
            <Style x:Key="CustomCalendarDayButton" TargetType="CalendarDayButton" BasedOn="{StaticResource MaterialDesignCalendarDayButton}">
                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#B2F39B" />
                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="Black" />
            </Style>
            <Style x:Key="CustomCalendarButton" TargetType="CalendarButton" BasedOn="{StaticResource MaterialDesignCalendarButton}">
                <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="#B2F39B" />
                <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="Black" />
            </Style>
            <Style x:Key="CustomCalendar" TargetType="{x:Type Calendar}" BasedOn="{StaticResource MaterialDesignDatePickerCalendarPortrait}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="materialDesign:CalendarAssist.HeaderBackground" Value="#A2E9FF" />
                <Setter Property="materialDesign:CalendarAssist.HeaderForeground" Value="Black" />
                <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CustomCalendarDayButton}" />
                <Setter Property="CalendarButtonStyle" Value="{StaticResource CustomCalendarButton}" />
            </Style>
            <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                <Setter Property="CalendarStyle" Value="{StaticResource CustomCalendar}" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding ElementName=top, Path=Height}"/>
            <RowDefinition Height="{Binding ElementName=okng, Path=Height}"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid>
            <StackPanel x:Name="top" Orientation="Horizontal" Margin="10" VerticalAlignment="Top">
                <DatePicker Margin="10" Width="100" materialDesign:HintAssist.Hint="日期" SelectedDate="{Binding Date, Mode=TwoWay}"/>
                <ComboBox Margin="10" materialDesign:HintAssist.Hint="班次" materialDesign:HintAssist.FontFamily="Verdana" MinWidth="100" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding ClassesList}" SelectedItem="{Binding Classes}"/>
                <ComboBox Margin="10" materialDesign:HintAssist.Hint="结果" materialDesign:HintAssist.FontFamily="Verdana" MinWidth="100" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding ResultList}" SelectedItem="{Binding Result}"/>
                <DatePicker Margin="10" IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Width="100" materialDesign:HintAssist.Hint="开始日期" SelectedDate="{Binding StartDate}"/>
                <materialDesign:TimePicker IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Margin="5" Width="100" Is24Hours="True" SelectedTime="{Binding StartTime}"
                                           Style="{StaticResource MaterialDesignFloatingHintTimePicker}" materialDesign:HintAssist.Hint="开始时间" />
                <DatePicker IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Margin="10" Width="100" materialDesign:HintAssist.Hint="结束日期" SelectedDate="{Binding StartTime}"/>
                <materialDesign:TimePicker IsEnabled="{Binding ElementName=TimeSelect, Path=IsChecked}" Margin="5" Width="100" Is24Hours="True" SelectedTime="{Binding EndTime}"
                                           Style="{StaticResource MaterialDesignFloatingHintTimePicker}" materialDesign:HintAssist.Hint="结束时间" />
                <TextBox Margin="10" materialDesign:HintAssist.Hint="产品ID" MinWidth="100" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                <CheckBox x:Name="TimeSelect" Margin="10" Content="按时间段查询" IsChecked="{Binding IsTimeSelect}" />

                <Button Margin="10" Style="{StaticResource MaterialDesignRaisedAccentButton}" MinWidth="100" Content="查询" Command="{Binding SelectCommand}"/>
                <Button Style="{StaticResource MaterialDesignRaisedButton}" materialDesign:ButtonProgressAssist.Value="-1" MinWidth="100" materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                                materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding ExportAnimation}"
                                Content="导出"
                                Margin="2,0"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <StackPanel x:Name="okng" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Button Margin="10" MinWidth="150" Style="{StaticResource MaterialDesignRaisedAccentButton}" materialDesign:RippleAssist.IsDisabled="True" Content="{Binding Count}" />
                <Button Margin="10" Background="Green" MinWidth="150" Style="{StaticResource MaterialDesignRaisedAccentButton}" materialDesign:RippleAssist.IsDisabled="True" Content="{Binding OKCount}" />
                <Button Margin="10" Background="Red" MinWidth="150" Style="{StaticResource MaterialDesignRaisedAccentButton}" materialDesign:RippleAssist.IsDisabled="True" Content="{Binding NGCount}" />
            </StackPanel>
            <ProgressBar x:Name="progressBar" VerticalAlignment="Bottom" IsIndeterminate="True" Visibility="{Binding IsShow,Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>
        <Grid Grid.Row="2">
            <DataGrid Background="Azure" BorderThickness="2"  Margin="10" CanUserAddRows="False" AutoGenerateColumns="False" HeadersVisibility="All">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <Border Background="Azure">
                                <CheckBox />
                            </Border>
                        </DataGridCheckBoxColumn.Header>
                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridTextColumn Binding="{Binding Code}" Header="测试项目" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    <DataGridTextColumn Binding="{Binding Name}" Header="测试值" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    <DataGridTextColumn Binding="{Binding Code}" Header="单位" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    <DataGridTextColumn Binding="{Binding Code}" Header="测试结果" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    <DataGridTextColumn Binding="{Binding Code}" Header="判断条件" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    <DataGridTextColumn Binding="{Binding Code}" Header="测试时间" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                    <DataGridTextColumn Binding="{Binding Code}" Header="采集时间" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
